// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int         @id @default(autoincrement())
  nombre   String
  apellido String
  DNI      BigInt
  email    String
  password String
  telefono BigInt
  edad     Int
  rutinas  Routine[]
  programa RoutineAt[] // Tanto programadas, como historial...
}



model RoutineAt {
  id        Int      @id @default(autoincrement())
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  rutina    Routine  @relation(fields: [routineId], references: [id])
  routineId Int
  orden     Int      @default(0) // Para ordenar ejercicios
  fecha     DateTime @default(now())
  cumplida  Boolean  @default(false) // Si pas√≥ la fecha y se pone cumplida como true, se vuelve historial
}

model Routine {
  id        Int         @id @default(autoincrement())
  nombre    String
  userId    Int
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  exercises Exercise[]
  createdAt DateTime    @default(now())
  RoutineAt RoutineAt[]
}

model Exercise {
  id        Int      @id @default(autoincrement())
  titulo    String
  media     String // URL de imagen
  info1     String // "10 x 5"
  info2     String // "descanso 1 min"
  routineId Int
  routine   Routine  @relation(fields: [routineId], references: [id], onDelete: Cascade)
  orden     Int      @default(0) // Para ordenar ejercicios
  createdAt DateTime @default(now())
}
